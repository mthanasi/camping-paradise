/* the initial background color we are going to fade in */
body {
    background-color: #000;
}

/* z index = 1 will bring forward landing-header wrt elements
with smalller z index however we have to change the po to relative*/
#landing-header {
    z-index: 1;  
    position: relative;
    text-align: center;
    padding-top: 40vh;
}

#landing-header h1 {
    color: #fff;
}

/* list-style = none -> removes the bullet points */
.slideshow {
    position: fixed;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    z-index: 0;
    list-style: none;
    margin: 0;
    padding: 0;
}

/* imageAnimation lasts for 50s (seconds),
keeps linear timing (the whole animation runs at the same speed), 
and loops an infinite number of times */
.slideshow li {
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    background-size: cover;
    background-position: 50% 50%;
    background-repeat: no-repeat;
    opacity: 0;
    z-index: 0;
    animation: imageAnimation 50s linear infinite;
}

/* last four need an animation-delay -> this way they all fire off 
one after the other in ten second intervals */
.slideshow li:nth-child(1) {
    background-image: url(http://i.imgur.com/K3mPv14.jpg)
}

.slideshow li:nth-child(2) {
    background-image: url(http://i.imgur.com/SBEmFpv.jpg);
    animation-delay: 10s;
}

.slideshow li:nth-child(3) {
    background-image: url(http://i.imgur.com/emvhOnb.jpg);
    animation-delay: 20s;
}

.slideshow li:nth-child(4) {
    background-image: url(http://i.imgur.com/2LSMCmJ.jpg);
    animation-delay: 30s;
}

.slideshow li:nth-child(5) {
    background-image: url(http://i.imgur.com/TVGe0Ef.jpg);
    animation-delay: 40s;
}

@keyframes imageAnimation {
    0% {
        opacity: 0;
        animation-timing-function: ease-in;
    }
    10% {
        opacity: 1;
        animation-timing-function: ease-out;
    }
    20% {
        opacity: 1
    }
    30% {
        opacity: 0
    }
}

/* The animation will be named imageAnimation, which matches with the value from our 
animation property in the .slideshow (unordered list) rule

* From 0% to 10% (the beginning of our animation) the list item begins changing 
it's opacity from 0 to 1  (invisible to visible) 

* the animation-timing-function is set to ease-in at 0% and ease-out and 10%, 
this makes for a more smooth fade-in 

* The list item's opacity then stays at 1 until it reaches 20% at which point it 
fades back out, reaching 0 at 30% and staying at 0 for the remainder of the animation

* If we have 5 background images visible for 5 seconds each, then the time it takes to
fade the image in and keep it visible is 10 seconds with a 5 second crossfade/fadeout
into the next image; The entire animation cycle for all 5 images takes 50 seconds total
100% divided by 5 is 20% so each image's fadein and visibility should last 20% of the cycle; 
half of 20% is 10%, that is why our fade in is from 0% to 10%, then we keep it visible until 20% is reached 
and begin the fadeout from 20% to 30%, the 5 second fadeout overlaps the next image's 5 second fadein, 
which is what creates the crossfade effect */

/* Older browser support - .no-cssanimations class added by modernizr */

.no-cssanimations .slideshow li {
    opacity: 1;
}